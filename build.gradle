description('travel-domain-rds')
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.hibernate.orm:hibernate-spatial'

    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.1.0'
    implementation 'com.querydsl:querydsl-apt:5.1.0'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'


    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    def generated = layout.buildDirectory.dir('generated/querydsl')
    def mapstructGenerated = layout.buildDirectory.dir('generated/sources/annotationProcessor/java/main')

    tasks.withType(JavaCompile).configureEach {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
        options.annotationProcessorPath = configurations.annotationProcessor
        options.compilerArgs += [
                '-s', file(mapstructGenerated).absolutePath
        ]
    }

    sourceSets {
        main.java.srcDirs += [ generated ]
        main.java.srcDirs += [ mapstructGenerated ]
    }

    clean {
        delete file(generated)
    }
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.verbose=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
